{"version":3,"sources":["components/Navbar.tsx","components/Carousel.tsx","client.ts","components/Header.tsx","components/Services.tsx","components/About.tsx","components/Projects.tsx","components/Contact.tsx","components/Snowflakes.tsx","components/LoadingScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","props","size","useContext","sizeContext","height","lg","sections","useState","currentSection","setCurrentSection","useEffect","window","addEventListener","contactPos","contactRef","current","offsetTop","servicesPos","servicesRef","aboutPos","aboutRef","projectsPos","projectsRef","pageOffset","pageYOffset","offset","cols","styles","container","backgroundColor","boxShadow","zIndex","img","maxHeight","margin","marginLeft","menuItems","display","justifyContent","alignItems","marginRight","menuItem","fontSize","menuList","width","menuButton","transform","style","marginBottom","className","templateColumns","h","gap","colSpan","onClick","headerRef","scrollIntoView","behavior","src","alt","closeOnBlur","closeOnSelect","as","IconButton","icon","variant","CarouselImage","darknessOverlayIntensity","projectView","minHeight","backgroundPosition","backgroundSize","label","color","text","padding","borderRadius","imgElement","maxWidth","imgContainer","modifiedUrl","url","backgroundImage","flexDirection","title","CarouselComponent","arrowStyles","position","top","cursor","showThumbs","showIndicators","showStatus","autoPlay","infiniteLoop","interval","useKeyboardArrows","stopOnHover","renderArrowNext","onClickHandler","hasNext","type","right","renderArrowPrev","left","imgUrls","map","image","undefined","sanityClient","projectId","dataset","useCdn","Header","data","setData","headerImagesLoadedCount","setHeaderImagesLoadedCount","length","setHasPageLoaded","fetch","then","d","forEach","Image","onload","prev","Services","marginTop","gridItem","heading","innercols","md","rows","align","templateRows","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","About","bgImageUrl","setBgImageUrl","backgroundAttachment","flexContainer","justify","Projects","projects","setProjects","project","Math","ceil","parentGrid","Project","images","useDisclosure","isOpen","onOpen","onClose","overlay","bottom","motionPreset","maxW","background","InputElement","input","setInput","valid","setValid","pointerEvents","children","name","placeholder","inputText","onChange","e","target","value","validFunc","tooltip","Contact","link","stack","email","validEmail","setValidEmail","validPhone","setValidPhone","validSubject","setValidSubject","faMobileAlt","href","faEnvelope","faMapMarkerAlt","allowFullScreen","action","method","spacing","isValid","test","faAngleRight","resize","disabled","leftIcon","borderColor","border","Snowflakes","currentDate","Date","christmas","getMonth","LoadingScreen","disappear","document","getElementById","innerContainer","outerContainer","id","createContext","xl","sm","UnAuthenticatedRoute","rest","redirect","App","useMediaQuery","useRef","hasPageLoaded","Provider","basename","process","path","ref","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","React","ReactDOM","render","StrictMode"],"mappings":"wRAce,SAASA,EAAOC,GAC3B,IAAMC,EAAOC,qBAAWC,GAClBC,EAASH,EAAKI,GAAK,IAAM,GACzBC,EAAW,CAAC,SAAU,WAAY,QAAS,WAAY,WAC7D,EAA4CC,mBAASD,EAAS,IAAG,mBAA1DE,EAAc,KAAEC,EAAiB,KAExCC,qBAAU,WACNC,OAAOC,iBAAiB,UAAU,WAC9B,IAAMC,EAAab,EAAMc,WAAWC,QAAQC,UACtCC,EAAcjB,EAAMkB,YAAYH,QAAQC,UACxCG,EAAWnB,EAAMoB,SAASL,QAAQC,UAClCK,EAAcrB,EAAMsB,YAAYP,QAAQC,UAE1CO,EAAaZ,OAAOa,YACpBC,EAAS,IAEThB,EADAc,EAAaE,EAASZ,GAAcL,IAAmBF,EAAS,GAC9CA,EAAS,GACpBiB,EAAaE,EAASJ,GAAeb,IAAmBF,EAAS,GACtDA,EAAS,GACpBiB,EAAaE,EAASN,GAAYX,IAAmBF,EAAS,GACnDA,EAAS,GACpBiB,EAAaE,EAASR,GAAeT,IAAmBF,EAAS,GACtDA,EAAS,GAETA,EAAS,SAGpC,IACH,IAAIoB,EAAOzB,EAAKI,GAAK,EAAI,EACrBsB,EAAS,CACTC,UAAW,CACPC,gBAAiB,UACjBC,UAAW,4BACXC,OAAQ,KAEZC,IAAK,CACDC,UAAW7B,EAAS,GACpB8B,OAAQ,EACRC,WAAYlC,EAAKI,GAAK,EAAI,IAE9B+B,UAAW,CACPC,QAAS,OACTC,eAAgB,WAChBC,WAAY,SACZC,YAAavC,EAAKI,GAAK,EAAI,IAE/BoC,SAAU,CACNN,WAAY,GACZO,SAAU,IAEdC,SAAU,CACNC,MAAO,KAEXC,WAAY,CACRC,UAAW7C,EAAKI,GAAK,aAAe,GACpCmC,YAAa,GACbV,UAAW,8BAGnB,OACI,qCACI,qBAAKiB,MAAO,CAACC,aAAc5C,KAC3B,qBAAK6C,UAAU,eAAeF,MAAOpB,EAAOC,UAAU,SAClD,eAAC,IAAI,CAACsB,gBAAiB,UAAYxB,EAAO,SAAUyB,EAAG/C,EAAS,KAAMgD,IAAK,EAAE,UACxEnD,EAAKI,IAAM,cAAC,IAAQ,IACrB,cAAC,IAAQ,CAACgD,QAASpD,EAAKI,GAAK,EAAI,EAAE,SAC/B,qBACI4C,UAAU,UACVK,QAAS,kBAAMtD,EAAMuD,UAAUxC,QAAQyC,eAAe,CAACC,SAAU,YACjEV,MAAOpB,EAAOK,IAAK0B,IAAK,gBAAiBC,IAAK,WAErD1D,EAAKI,GACF,eAAC,IAAQ,CAAC0C,MAAOpB,EAAOS,UAAWiB,QAASpD,EAAKI,GAAK,EAAI,EAAE,UACxD,mBACIiD,QAAS,kBAAMtD,EAAMkB,YAAYH,QAAQyC,eAAe,CAACC,SAAU,YACnER,UAAW,WAAazC,IAAmBF,EAAS,GAAK,aAAe,IACxEyC,MAAOpB,EAAOc,SAAS,SAAC,cAG5B,mBACIa,QAAS,kBAAMtD,EAAMoB,SAASL,QAAQyC,eAAe,CAACC,SAAU,YAChER,UAAW,WAAazC,IAAmBF,EAAS,GAAK,aAAe,IACxEyC,MAAOpB,EAAOc,SAAS,SAAC,WAG5B,mBACIa,QAAS,kBAAMtD,EAAMsB,YAAYP,QAAQyC,eAAe,CAACC,SAAU,YACnER,UAAW,WAAazC,IAAmBF,EAAS,GAAK,aAAe,IACxEyC,MAAOpB,EAAOc,SAAS,SAAC,eAG5B,mBACIa,QAAS,kBAAMtD,EAAMc,WAAWC,QAAQyC,eAAe,CAACC,SAAU,YAClER,UAAW,WAAazC,IAAmBF,EAAS,GAAK,aAAe,IACxEyC,MAAOpB,EAAOc,SAAS,SAAC,mBAKhC,cAAC,IAAQ,CAACM,MAAOpB,EAAOS,UAAWiB,QAASpD,EAAKI,GAAK,EAAI,EAAE,SACxD,eAAC,IAAI,CAACuD,aAAa,EAAMC,eAAe,EAAK,UACzC,cAAC,IAAU,CACPd,MAAOpB,EAAOkB,WACdiB,GAAIC,IACJ,aAAW,UACXC,KAAM,cAAC,IAAa,IACpBC,QAAQ,YAEZ,eAAC,IAAQ,CAAClB,MAAOpB,EAAOgB,SAAS,UAC7B,cAAC,IAAQ,CACLW,QAAS,kBAAMtD,EAAMkB,YAAYH,QAAQyC,eAAe,CAACC,SAAU,YAAW,SACjF,cACD,cAAC,IAAQ,CACLH,QAAS,kBAAMtD,EAAMoB,SAASL,QAAQyC,eAAe,CAACC,SAAU,YAAW,SAC9E,WACD,cAAC,IAAQ,CACLH,QAAS,kBAAMtD,EAAMsB,YAAYP,QAAQyC,eAAe,CAACC,SAAU,YAAW,SACjF,eACD,cAAC,IAAQ,CACLH,QAAS,kBAAMtD,EAAMc,WAAWC,QAAQyC,eAAe,CAACC,SAAU,YAAW,SAChF,wBAMhBxD,EAAKI,IAAM,cAAC,IAAQ,Y,kBC5HzC,SAAS6D,EAAclE,GACnB,IAAMmE,EAA2BnE,EAAMoE,YAAc,EAAI,GACnDnE,EAAOC,qBAAWC,GACpBwB,EAAS,CACTK,IAAK,CACDqC,UAAW,OACXC,mBAAoB,SACpBC,eAAgB,SAEpBC,MAAO,CACHC,MAAO,QACPpC,QAAS,OACTE,WAAYvC,EAAMoE,YAAc,WAAa,SAC7C9B,eAAgB,SAChBM,MAAO,OACPxC,OAAQ,OACRsC,SAAUzC,EAAKI,GAAK,GAAK,GACzB6B,OAAQ,QAEZwC,KAAM,CACF7C,gBAAiB,sBACjB8C,QAAS,GACTC,aAAc,GAElBC,WAAY,CACRC,SAAU,QAEdC,aAAc,CACVlD,gBAAiB,kBACjBzB,OAAQ,SAGV4E,EAAchF,EAAMiF,IAAM,UAChC,OACI,mCACKjF,EAAMoE,YACH,mCACI,cAAC,IAAI,CAAC9B,eAAe,SAASC,WAAW,SAASQ,MAAOpB,EAAOoD,aAAa,SACzE,qBACIrB,IAAKsB,EACLjC,MAAOpB,EAAOkD,WACdlB,IAAI,sBAKhB,qBAAKZ,MAAK,aACNmC,gBAAiB,kCAAoCf,EAA2B,oBAAsBA,EAA2B,aAAea,EAAc,MAC3JrD,EAAOK,KACZ,SACE,qBAAKe,MAAOpB,EAAO6C,MAAM,SACrB,eAAC,IAAI,CAACW,cAAc,SAAQ,UACvBnF,EAAMoF,OAAS,cAAC,IAAO,UAAEpF,EAAMoF,QAC/BpF,EAAMwE,OAAS,cAAC,IAAI,CAACzB,MAAO/C,EAAMoE,YAAczC,EAAO+C,KAAO,GAAG,SAAE1E,EAAMwE,iBASvF,SAASa,EAAkBrF,GACtC,IAAI2B,EAAS,CACTC,UAAW,GACX0D,YAAa,CACTC,SAAU,WACVxD,OAAQ,EACRyD,IAAK,mBACL5C,MAAO,GACPxC,OAAQ,GACRqF,OAAQ,UACRhB,MAAO,QACPG,aAAc,OACd1C,OAAQ,SACRL,gBAAiB7B,EAAMoE,YAAc,qBAAuB,KAIpE,OACI,cAAC,WAAQ,CAACsB,YAAY,EAAOC,eAAgB3F,EAAMoE,YAAawB,YAAY,EAAOC,UAAQ,EACjFC,cAAY,EAACC,SAAU,IAAMC,mBAAiB,EAACC,aAAa,EAC5DC,gBACI,SAACC,EAAgBC,EAAS5B,GAAK,OAC3B4B,GACI,wBAAQnD,UAAU,iBAAiBoD,KAAK,SAAS/C,QAAS6C,EAAgBf,MAAOZ,EAEzEzB,MAAK,2BAAMpB,EAAO2D,aAAW,IAAEgB,MAAO,KAAI,SAC9C,cAAC,IAAc,OAI/BC,gBACI,SAACJ,EAAgBC,EAAS5B,GAAK,OAC3B4B,GACI,wBAAQnD,UAAU,iBAAiBoD,KAAK,SAAS/C,QAAS6C,EAAgBf,MAAOZ,EAEzEzB,MAAK,2BAAMpB,EAAO2D,aAAW,IAAEkB,KAAM,KAAI,SAC7C,cAAC,IAAa,OAG7B,SAGHxG,EAAMyG,QAAQC,KAAI,SAAAC,GAAK,OAAI,cAACzC,EAAa,CAAiBe,IAAK0B,EAAM1B,IAAKG,MAAOuB,EAAMvB,MAAQuB,EAAMvB,MAAQ,GACnEZ,MAAOmC,EAAMnC,MAAQmC,EAAMnC,WAAQoC,EAAWxC,YAAapE,EAAMoE,aAD5DuC,EAAM1B,U,aCtHtD4B,E,MAAAA,GAAa,CACxBC,UAAW,WACXC,QAAS,aACTC,QAAQ,ICIG,SAASC,EAAOjH,GAC3B,MAAwBO,mBAAS,IAAG,mBAA7B2G,EAAI,KAAEC,EAAO,KACpB,EAA8D5G,mBAAS,GAAE,mBAAlE6G,EAAuB,KAAEC,EAA0B,KAoB1D,OAnBA3G,qBAAU,WACc,IAAhBwG,EAAKI,OAActH,EAAMuH,kBAAiB,GACrCH,GAA2BF,EAAKI,QACrCtH,EAAMuH,kBAAiB,KAE5B,CAACH,EAAyBF,EAAKI,OAAQtH,IAC1CU,qBAAU,WACNmG,EAAaW,MAAM,uGAEVC,MAAK,SAACC,GAEXP,EAAQO,EAAEhB,KAAI,SAAA1E,GAAG,OAAIA,EAAmB,iBAAG,IAC3C0F,EAAE,GAAkB,cAAEC,SAAQ,SAAC3F,GAC3B,IAAM2E,EAAQ,IAAIiB,MAClBjB,EAAMjD,IAAM1B,EAAIiD,IAChB0B,EAAMkB,OAAS,kBAAMR,GAA2B,SAAAS,GAAI,OAAIA,EAAO,cAGxE,IAEC,8BACI,cAACzC,EAAiB,CAACoB,QAASS,EAAM9C,aAAa,MC5B5C,SAAS2D,IACpB,IAAM9H,EAAOC,qBAAWC,GACpBwB,EAAS,CACTC,UAAW,CACPG,OAAQ,EACRiG,WAAY,GACZrD,QAAS,UAEbsD,SAAU,CACN5D,UAAW,IACXrB,aAAc,GACd5C,OAAQ,QAEZsE,KAAM,CACFI,SAAU7E,EAAKI,GAAK,GAAK,MACzB2H,UAAW,IAEfE,QAAS,CACLlF,aAAc,GACdyB,MAAO,QAEXT,KAAM,CACF5D,OAAQ,GACR0C,UAAW,aACX2B,MAAO,qBAIX/C,EAAOzB,EAAKI,GAAK,EAAI,EACrB8H,EAAYlI,EAAKmI,GAAK,EAAI,EAC1BC,EAAOpI,EAAKmI,GAAK,EAAI,EACzB,OACI,qCACI,qBAAKnF,UAAU,mBACf,sBAAKA,UAAU,mBAAmBF,MAAOpB,EAAOC,UAAU,UACtD,cAAC,IAAO,CAAC0G,MAAM,SAASvF,MAAOpB,EAAOuG,QAAQ,SAAC,8BAC/C,eAAC,IAAI,CAAChF,gBAAiB,UAAYxB,EAAO,SAAU6G,aAAc,iBAC5DnF,IAAK,EAAE,UACRnD,EAAKI,IAAM,cAAC,IAAQ,IACrB,cAAC,IAAQ,CAAC4C,UAAU,mBAAmBI,QAAS,EAAE,SAC9C,eAAC,IAAI,CAACH,gBAAiB,UAAYiF,EAAY,SACzCI,aAAc,UAAYF,EAAO,SACjCjF,IAAK,GAAG,UACV,cAAC,IAAQ,CAACL,MAAOpB,EAAOsG,SAAS,SAC7B,eAAC,IAAI,CAAC9C,cAAc,SAASmD,MAAM,SAAQ,UACvC,sBACI1F,MAAM,KACNxC,OAAO,KACPoI,MAAM,6BACNC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QACf/F,MAAOpB,EAAOqC,KAAK,UAEnB,sBAAM+E,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,MAChC,sBAAMxB,EAAE,kDAEZ,cAAC,IAAI,CAACY,MAAM,SAASvF,MAAOpB,EAAO+C,KAAK,SAAC,0IAMjD,cAAC,IAAQ,CAAC3B,MAAOpB,EAAOsG,SAAS,SAC7B,eAAC,IAAI,CAAC9C,cAAc,SAASmD,MAAM,SAAQ,UACvC,qBACI1F,MAAM,KACNxC,OAAO,KACPoI,MAAM,6BACNC,QAAQ,YACRC,KAAK,eACLC,OAAO,QACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QACf/F,MAAOpB,EAAOqC,KAAK,SAEnB,8BACI,sBAAM0E,KAAK,OAAOhB,EAAE,kBACpB,sBAAMA,EAAE,8QAGhB,cAAC,IAAI,CAACY,MAAM,SAASvF,MAAOpB,EAAO+C,KAAK,SAAC,0HAMjD,cAAC,IAAQ,CAAC3B,MAAOpB,EAAOsG,SAAS,SAC7B,eAAC,IAAI,CAAC9C,cAAc,SAASmD,MAAM,SAAQ,UACvC,sBACIE,MAAM,6BACN5F,MAAM,KACNxC,OAAO,KACPqI,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QACf/F,MAAOpB,EAAOqC,KAAK,UAEnB,sBAAM0D,EAAE,2EACR,sBAAMA,EAAE,uBACR,sBAAMA,EAAE,oJAEZ,cAAC,IAAI,CAACY,MAAM,SAASvF,MAAOpB,EAAO+C,KAAK,SAAC,iHAQxDzE,EAAKI,IAAM,cAAC,IAAQ,UAG7B,qBAAK4C,UAAU,yBCxHZ,SAASkG,IACpB,IAEMlJ,EAAOC,qBAAWC,GACxB,EAAoCI,mBAAS,IAAG,mBAAzC6I,EAAU,KAAEC,EAAa,KAEhC3I,qBAAU,WACNmG,EAAaW,MAAM,oDAAoDC,MAAK,SAACC,GACzE2B,EAAc3B,EAAE,GAAU,MAAO,IAAI,gBAE1C,IACH,IAAI/F,EAAS,CACTC,UAAW,CACP0H,qBAAsB,QACtBhF,mBAAoB,SACpBC,eAAgB,QAChBF,UAdU,IAeVtC,OAAQ,EACR0C,MAAO,QACPE,QAAS,UACTO,gBAAiB,mEAA+HkE,EAAa,MAEjKG,cAAe,CACXlF,UArBU,IAsBVM,QAAS,KAGjB,OACI,mCACI,qBAAK5B,MAAOpB,EAAOC,UAAU,SACzB,eAAC,IAAI,CAACsB,gBAAiB,iBAAkBE,IAAK,EAAE,UAC3CnD,EAAKI,IAAM,cAAC,IAAQ,IACrB,cAAC,IAAQ,CAACgD,QAASpD,EAAKI,GAAK,EAAI,EAAE,SAC/B,cAAC,IAAI,CAAC0C,MAAOpB,EAAO4H,cAAeC,QAAQ,SAASlB,MAAM,SAAQ,SAC9D,eAAC,IAAG,WACA,cAAC,IAAO,CAACA,MAAM,SAAQ,SAAC,iBACxB,cAAC,IAAI,CAACA,MAAM,SAAQ,SAAC,uhBAWhCrI,EAAKI,IAAM,cAAC,IAAQ,W,mBC9C1B,SAASoJ,IACpB,IAAMxJ,EAAOC,qBAAWC,GAEpBuB,EAAOzB,EAAKI,GAAK,EAAKJ,EAAKmI,GAAK,EAAI,EACxC,EAAgC7H,mBAAS,IAAG,mBAArCmJ,EAAQ,KAAEC,EAAW,KAC5BjJ,qBAAU,WACNmG,EAAaW,MAAM,oFAAoFC,MAAK,SAACC,GACzGA,EAAEC,SAAQ,SAACiC,GAAyB,OAAKA,EAAQ3E,IAAM2E,EAAQ3E,IAAM,YAErE0E,EAAYjC,QAEjB,IACH,IAAIW,EAAOwB,KAAKC,KAAKJ,EAASpC,OAAS5F,GAEnCC,EAAS,CACTuG,QAAS,CACLlF,aAAc,GACdyB,MAAO,QAEXsF,WAAY,CACR/G,aAAc,GACd2B,QAAS,WAGjB,OAAwB,IAApB+E,EAASpC,OAAsB,6BAE/B,qCACI,qBAAKrE,UAAU,mBACf,cAAC,IAAO,CAACF,MAAOpB,EAAOuG,QAASI,MAAM,SAAQ,SAAC,wBAG/C,eAAC,IAAI,CAACvF,MAAOpB,EAAOoI,WAAY7G,gBAAiB,WAAajD,EAAKI,GAAK,EAAI,GAAK,SAAU+C,IAAK,EAAE,UAC7FnD,EAAKI,IAAM,cAAC,IAAQ,IACrB,cAAC,IAAQ,CAACgD,QAAS,EAAE,SACjB,cAAC,IAAI,CAACH,gBAAiB,UAAYxB,EAAO,SACpC6G,aAAc,UAAYF,EAAZ,WAA6CjF,IAAK,EAAE,SACnEsG,EAAShD,KAAI,SAAAkD,GAAO,OAAI,cAACI,EAAO,CAAmC5E,MAAOwE,EAAe,MAAIA,EAAe,WAAIhD,EAAWqD,OAAQL,EAAgB,QAA7GA,EAAgB,OAAE,GAAQ,YAGxE3J,EAAKI,IAAM,cAAC,IAAQ,UAWrC,SAAS2J,EAAQhK,GACb,MAAoCkK,cAA5BC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QACpB1I,EAAS,CACTC,UAAW,CACP6D,OAAQ,UACRP,gBAAiB,OAASlF,EAAMiK,OAAO,GAAGhF,IAAM,IAChDV,eAAgB,QAChBD,mBAAoB,UAExBgG,QAAS,CACLC,OAAQ,EACR3H,MAAO,OACPf,gBAAiB,yBACjBQ,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ4C,cAAe,WAGvB,OACI,qCACI,eAAC,IAAK,CAACgF,OAAQA,EAAQE,QAASA,EAASG,aAAa,gBAAgBvK,KAAM,KAAK,UAC7E,cAAC,IAAY,IACb,cAAC,IAAY,CAACwK,KAAK,OAAM,SACrB,cAACpF,EAAiB,CAACoB,QAASzG,EAAMiK,OAAQ7F,aAAa,SAG/D,cAAC,IAAQ,CAACnB,UAAU,kCAAkCF,MAAOpB,EAAOC,UAAW8I,WAAW,WAChFpH,QAAS8G,EAAO,SAEtB,sBAAKnH,UAAU,mBAAmBF,MAAOpB,EAAO2I,QAAQ,UACnDtK,EAAMoF,OAAS,cAAC,IAAO,UAAEpF,EAAMoF,QAChC,eAAC,IAAI,WAAC,sBAAiBpF,EAAMiK,OAAO3C,OAAO,SAAOtH,EAAMiK,OAAO3C,OAAS,EAAI,IAAM,GAAG,e,4CChFzG,SAASqD,EAAa3K,GAClB,MAAwBO,mBAAS,IAAG,mBAA/BqK,EAAK,KAAEC,EAAQ,KACpB,EAAwBtK,oBAAS,GAAM,mBAAlCuK,EAAK,KAAEC,EAAQ,KACpB,OACI,mCACI,eAAC,IAAU,WACP,cAAC,IAAgB,CACbC,cAAc,OACdvG,MAAM,WACN/B,SAAS,QACTuI,SAAU,cAAC,IAAe,CAACjH,KAAMhE,EAAMgE,SAE3C,cAAC,IAAK,CAACkH,KAAMlL,EAAMkL,KAAMC,YAAanL,EAAMoL,UAAW1G,KAAMkG,EAAOS,SAAU,SAACC,GAC3ET,EAASS,EAAEC,OAAOC,OAClBT,EAAS/K,EAAMyL,UAAUH,EAAEC,OAAOC,WAEtC,cAAC,IAAiB,CACdP,SACIH,EACI,cAAC,IAAS,CAACrG,MAAM,cACjB,cAAC,IAAO,CAACD,MAAOxE,EAAM0L,QAAQ,SAC1B,cAAC,IAAc,CAACjH,MAAM,wBASvC,SAASkH,IACpB,IAAIhK,EAAS,CACTC,UAAW,GAEXsG,QAAS,CACLlF,aAAc,GACdyB,MAAO,QAEXT,KAAM,CACFxB,YAAa,GACbM,UAAW,cAEf4B,KAAM,CACF1B,aAAc,IAElBuH,OAAQ,CACJnK,OAAQ,IAEZwL,KAAM,CACFnH,MAAO,gBAEXiC,IAAK,CACDrE,QAAS,OACTC,eAAgB,UAEpBuJ,MAAO,CACHlH,QAAS,WAGX1E,EAAOC,qBAAWC,GACpBuB,EAAOzB,EAAKI,GAAK,EAAI,EACrByL,EAAQ,uBAGZ,EAAoCvL,oBAAS,GAAM,mBAA5CwL,EAAU,KAAEC,EAAa,KAChC,EAAoCzL,oBAAS,GAAM,mBAA5C0L,EAAU,KAAEC,EAAa,KAChC,EAAwC3L,oBAAS,GAAM,mBAAhD4L,EAAY,KAAEC,EAAe,KAmBpC,OACI,qCACI,cAAC,IAAO,CAACrJ,MAAOpB,EAAOuG,QAASI,MAAM,SAAQ,SAAC,gBAG/C,eAAC,IAAI,CAACpF,gBAAiB,UAAYxB,EAAO,SAAU0B,IAAK,EAAE,UACtDnD,EAAKI,IAAM,cAAC,IAAQ,IACrB,eAAC,IAAQ,CAACgD,QAAS,EAAGN,MAAOpB,EAAOC,UAAU,UAC1C,eAAC,IAAI,CAAC0G,MAAM,SAASvF,MAAOpB,EAAO+C,KAAK,UACpC,cAAC,IAAe,CAAC3B,MAAOpB,EAAOqC,KAAMA,KAAMqI,MAAc,UAClD,mBAAGtJ,MAAOpB,EAAOiK,KAAMU,KAAK,mBAAkB,SAjC7D,wBAmCI,eAAC,IAAI,CAAChE,MAAM,SAASvF,MAAOpB,EAAO+C,KAAK,UACpC,cAAC,IAAe,CAAC3B,MAAOpB,EAAOqC,KAAMA,KAAMuI,MAAa,WAChD,mBAAGxJ,MAAOpB,EAAOiK,KAAMU,KAAM,UAAYR,EAAM,SAAEA,OAE7D,eAAC,IAAI,CAACxD,MAAM,SAASvF,MAAOpB,EAAO+C,KAAK,UACpC,cAAC,IAAe,CAAC3B,MAAOpB,EAAOqC,KAAMA,KAAMwI,MAvCjD,8CA0CE,qBAAKzJ,MAAOpB,EAAO+E,IAAI,SACnB,wBACItB,MAAM,cACN1B,IAAI,+SAEJd,MAAM,MAAMxC,OAAO,MAAMqM,gBAAgB,UAGrD,cAAC,IAAQ,CAACpJ,QAAS,EAAGN,MAAOpB,EAAOC,UAAU,SAC1C,sBACI8K,OAAO,kCACPC,OAAO,OAAM,SAEb,eAAC,IAAK,CAAC5J,MAAOpB,EAAOkK,MAAOe,QAAS,EAAE,UACnC,cAACjC,EAAY,CACTO,KAAK,gBACLlH,KAAMqI,IACNjB,UAAW,gBACXK,UAvDR,SAAC/G,GACjB,IAAImI,EAAUnI,EAAK4C,QAAU,EAE7B,OADA4E,EAAcW,GACPA,GAqDiBnB,QAAS,0BAEb,cAACf,EAAY,CACTO,KAAK,WACLlH,KAAMuI,IACNnB,UAAW,SACXK,UApDR,SAACK,GACjB,IACIe,EADK,6BACQC,KAAKhB,GAEtB,OADAE,EAAca,GACPA,GAiDiBnB,QAAS,2BAEb,cAACf,EAAY,CACTO,KAAK,UACLlH,KAAM+I,IACN3B,UAAW,OACXK,UAhEN,SAAC/G,GACnB,IAAImI,EAAUnI,EAAK4C,QAAU,EAE7B,OADA8E,EAAgBS,GACTA,GA8DiBnB,QAAS,sBAEb,cAAC,IAAQ,CACLR,KAAK,UACLC,YAAY,UACZ6B,OAAO,WACP5M,OAAQ,UAEZ,cAAC,IAAM,CACHiG,KAAK,SACL4G,UAAWlB,IAAeE,IAAeE,EACzCe,SAAU,cAAC,IAAS,IACpBtK,MAAM,QACNuK,YAAa,UACbC,OAAQ,MACRnJ,QAAQ,UAAS,SACpB,+BAOjB,qBAAKlB,MAAOpB,EAAO4I,Y,YCxKhB,SAAS8C,IACpB,IAAIC,EAAc,IAAIC,KAClBC,EAAuC,KAA3BF,EAAYG,YAAgD,IAA3BH,EAAYG,WAC7D,OACI,mCACKD,GACD,qCACE,qBAAKvK,UAAU,YAAW,SAAC,WAC3B,qBAAKA,UAAU,YAAW,SAAC,WAC3B,qBAAKA,UAAU,YAAW,SAAC,WAC3B,qBAAKA,UAAU,YAAW,SAAC,WAC3B,qBAAKA,UAAU,YAAW,SAAC,WAC3B,qBAAKA,UAAU,YAAW,SAAC,WAC3B,qBAAKA,UAAU,YAAW,SAAC,WAC3B,qBAAKA,UAAU,YAAW,SAAC,WAC3B,qBAAKA,UAAU,YAAW,SAAC,WAC3B,qBAAKA,UAAU,YAAW,SAAC,WAC3B,qBAAKA,UAAU,YAAW,SAAC,WAC3B,qBAAKA,UAAU,YAAW,SAAC,gB,qBCb1B,SAASyK,EAAc1N,GAClCU,qBAAU,WACFV,EAAM2N,YACNC,SAASC,eAAe,iBAAkB5K,WAAa,eAE5D,CAACjD,EAAM2N,YACV,IAAIhM,EAAS,CACTC,UAAW,CACPC,gBAAiB,QACjBe,MAAO,QACPxC,OAAQ,QACR2B,OAAQ,IACRM,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZS,aAAc,IAElB8K,eAAgB,CACZlL,MAAO,SAEXmL,eAAgB,CACZ1L,QAAS,OACT8C,cAAe,UAEnBT,KAAM,CACFD,MAAO,UAGf,OACI,sBAAK1B,MAAOpB,EAAOC,UAAWoM,GAAG,gBAAgB/K,UAAW,gBAAgB,UACxE,qBAAKF,MAAOpB,EAAOmM,eAAgB7K,UAAU,uBAAuBuF,MAAM,6BAA6BC,QAAQ,cAAa,SACxH,sBACIf,EAAE,sbAEV,qBAAK3E,MAAOpB,EAAOmM,eAAgB7K,UAAU,yBAAyBuF,MAAM,6BAA6BC,QAAQ,cAAa,SAC1H,sBACIf,EAAE,+OAEV,qBAAK3E,MAAOpB,EAAOmM,eAAgB7K,UAAU,uBAAuBuF,MAAM,6BAA6BC,QAAQ,cAAa,SACxH,sBACIf,EAAE,md,8BChChBvH,EAAc8N,wBAAc,CAACC,IAAI,EAAO7N,IAAI,EAAO+H,IAAI,EAAO+F,IAAI,IAOxE,SAASC,EAAqB,GAAwD,IAAtDnD,EAAQ,EAARA,SAA6BoD,GAArB,EAAEC,SAAuB,kBAC7D,OACI,cAAC,IAAK,2BAAKD,GAAI,aACVpD,KAoDEsD,MA/Cf,WACI,MAAyBC,YAAc,CACnC,sBACA,sBACA,qBACA,uBACF,mBALKN,EAAE,KAAE7N,EAAE,KAAE+H,EAAE,KAAE+F,EAAE,KAOf5K,EAAYkL,iBAAO,MACnBvN,EAAcuN,iBAAO,MACrBrN,EAAWqN,iBAAO,MAClBnN,EAAcmN,iBAAO,MACrB3N,EAAa2N,iBAAO,MAC1B,EAA0ClO,oBAAS,GAAM,mBAAlDmO,EAAa,KAAEnH,EAAgB,KAEtC,OACI,qBAAKtE,UAAU,MAAK,SAChB,cAAC9C,EAAYwO,SAAQ,CAACnD,MAAO,CAAC0C,GAAIA,EAAI7N,GAAIA,EAAI+H,GAAIA,EAAI+F,GAAIA,GAAI,SAC1D,cAAC,IAAM,CAACS,SAAUC,GAAuB,SACrC,cAAC,IAAM,UACP,eAACT,EAAoB,CAACU,KAAM,IAAI,UAC5B,cAACpB,EAAa,CAACC,UAAWe,IAC1B,cAACrB,EAAU,IACX,cAACtN,EAAM,CAACwD,UAAWA,EAAWrC,YAAaA,EAAaJ,WAAYA,EAAYM,SAAUA,EAAUE,YAAaA,IACjH,qBAAKyN,IAAKxL,EAAU,SAChB,cAAC0D,EAAM,CAACM,iBAAkBA,MAE9B,qBAAKwH,IAAK7N,EAAY,SAClB,cAAC6G,EAAQ,MAEb,qBAAKgH,IAAK3N,EAAS,SACf,cAAC+H,EAAK,MAEV,qBAAK4F,IAAKzN,EAAY,SAClB,cAACmI,EAAQ,MAEb,qBAAKsF,IAAKjO,EAAW,SACjB,cAAC6K,EAAO,kB,QCpDrBqD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBzH,MAAK,YAAkD,IAA/C0H,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdtO,OAAO6O,MAAQA,IACfC,IAASC,OACP,cAAC,IAAMC,WAAU,UACb,cAAC,IAAc,UACX,cAAC,EAAG,QAGZ/B,SAASC,eAAe,SAM1BmB,M","file":"static/js/main.3f4b3050.chunk.js","sourcesContent":["import {Grid, GridItem, IconButton, Menu, MenuButton, MenuItem, MenuList} from \"@chakra-ui/react\";\nimport {HamburgerIcon} from '@chakra-ui/icons'\nimport {MutableRefObject, useContext, useEffect, useState} from \"react\";\nimport {sizeContext} from \"../App\";\n\n\ninterface navInterface {\n    headerRef: MutableRefObject<any>;\n    servicesRef: MutableRefObject<any>;\n    aboutRef: MutableRefObject<any>;\n    projectsRef: MutableRefObject<any>;\n    contactRef: MutableRefObject<any>;\n}\n\nexport default function Navbar(props: navInterface) {\n    const size = useContext(sizeContext)\n    const height = size.lg ? 100 : 80 // Height of navbar in px\n    const sections = [\"HEADER\", \"SERVICES\", \"ABOUT\", \"PROJECTS\", \"CONTACT\"]\n    const [currentSection, setCurrentSection] = useState(sections[0])\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            const contactPos = props.contactRef.current.offsetTop\n            const servicesPos = props.servicesRef.current.offsetTop\n            const aboutPos = props.aboutRef.current.offsetTop\n            const projectsPos = props.projectsRef.current.offsetTop\n\n            let pageOffset = window.pageYOffset\n            let offset = 150\n            if (pageOffset + offset > contactPos && currentSection !== sections[4]) {\n                setCurrentSection(sections[4])\n            } else if (pageOffset + offset > projectsPos && currentSection !== sections[3]) {\n                setCurrentSection(sections[3])\n            } else if (pageOffset + offset > aboutPos && currentSection !== sections[2]) {\n                setCurrentSection(sections[2])\n            } else if (pageOffset + offset > servicesPos && currentSection !== sections[1]) {\n                setCurrentSection(sections[1])\n            } else {\n                setCurrentSection(sections[0])\n            }\n        });\n    }, []) // eslint-disable-line\n    let cols = size.lg ? 6 : 2;\n    let styles = {\n        container: {\n            backgroundColor: \"#F8F9FA\",\n            boxShadow: \"0 1px 5px rgba(0,0,0,0.3)\",\n            zIndex: 110,\n        },\n        img: {\n            maxHeight: height - 10,\n            margin: 5,\n            marginLeft: size.lg ? 5 : 20,\n        },\n        menuItems: {\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n            marginRight: size.lg ? 0 : 20,\n        },\n        menuItem: {\n            marginLeft: 25,\n            fontSize: 16,\n        },\n        menuList: {\n            width: 300,\n        },\n        menuButton: {\n            transform: size.lg ? \"scale(1.5)\" : \"\",\n            marginRight: 10,\n            boxShadow: \"0 1px 1px rgba(0,0,0,0.2)\",\n        }\n    }\n    return (\n        <>\n            <div style={{marginBottom: height}}/>\n            <div className=\"navContainer\" style={styles.container}>\n                <Grid templateColumns={'repeat(' + cols + ', 1fr)'} h={height + \"px\"} gap={3}>\n                    {size.lg && <GridItem/>}\n                    <GridItem colSpan={size.lg ? 2 : 1}>\n                        <img\n                            className=\"navLogo\"\n                            onClick={() => props.headerRef.current.scrollIntoView({behavior: 'smooth'})}\n                            style={styles.img} src={\"/img/logo.png\"} alt={\"logo\"}/>\n                    </GridItem>\n                    {size.lg ?\n                        <GridItem style={styles.menuItems} colSpan={size.lg ? 2 : 1}>\n                            <p\n                                onClick={() => props.servicesRef.current.scrollIntoView({behavior: 'smooth'})}\n                                className={\"navLink\" + (currentSection === sections[1] ? \" navActive\" : \"\") }\n                                style={styles.menuItem}>\n                                Tjenester\n                            </p>\n                            <p\n                                onClick={() => props.aboutRef.current.scrollIntoView({behavior: 'smooth'})}\n                                className={\"navLink\" + (currentSection === sections[2] ? \" navActive\" : \"\") }\n                                style={styles.menuItem}>\n                                Om oss\n                            </p>\n                            <p\n                                onClick={() => props.projectsRef.current.scrollIntoView({behavior: 'smooth'})}\n                                className={\"navLink\" + (currentSection === sections[3] ? \" navActive\" : \"\") }\n                                style={styles.menuItem}>\n                                Prosjekter\n                            </p>\n                            <p\n                                onClick={() => props.contactRef.current.scrollIntoView({behavior: 'smooth'})}\n                                className={\"navLink\" + (currentSection === sections[4] ? \" navActive\" : \"\") }\n                                style={styles.menuItem}>\n                                Kontakt oss\n                            </p>\n                        </GridItem>\n                        :\n                        <GridItem style={styles.menuItems} colSpan={size.lg ? 2 : 1}>\n                            <Menu closeOnBlur={true} closeOnSelect={true}>\n                                <MenuButton\n                                    style={styles.menuButton}\n                                    as={IconButton}\n                                    aria-label='Options'\n                                    icon={<HamburgerIcon/>}\n                                    variant='outline'\n                                />\n                                <MenuList style={styles.menuList}>\n                                    <MenuItem\n                                        onClick={() => props.servicesRef.current.scrollIntoView({behavior: 'smooth'})}\n                                    >Tjenester</MenuItem>\n                                    <MenuItem\n                                        onClick={() => props.aboutRef.current.scrollIntoView({behavior: 'smooth'})}\n                                    >Om oss</MenuItem>\n                                    <MenuItem\n                                        onClick={() => props.projectsRef.current.scrollIntoView({behavior: 'smooth'})}\n                                    >Prosjekter</MenuItem>\n                                    <MenuItem\n                                        onClick={() => props.contactRef.current.scrollIntoView({behavior: 'smooth'})}\n                                    >Kontakt oss</MenuItem>\n                                </MenuList>\n                            </Menu>\n                        </GridItem>\n                    }\n\n                    {size.lg && <GridItem/>}\n                </Grid>\n            </div>\n        </>\n    )\n}\n","import {ArrowLeftIcon, ArrowRightIcon} from \"@chakra-ui/icons\";\nimport {Carousel} from \"react-responsive-carousel\"\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport {useContext} from \"react\";\nimport {sizeContext} from \"../App\";\nimport {Flex, Heading, Text} from \"@chakra-ui/react\";\n\ninterface carouselInterface {\n    imgUrls: {\n        url: string,\n        title?: string,\n        label?: string,\n    }[];\n    projectView: boolean;\n}\n\nfunction CarouselImage(props: { url: string, title?: string, label?: string, projectView: boolean }) {\n    const darknessOverlayIntensity = props.projectView ? 0 : 0.4; // [0,1], reduce to lighten\n    const size = useContext(sizeContext)\n    let styles = {\n        img: {\n            minHeight: \"80vh\",\n            backgroundPosition: \"center\",\n            backgroundSize: \"cover\",\n        },\n        label: {\n            color: \"white\",\n            display: \"flex\",\n            alignItems: props.projectView ? \"flex-end\" : \"center\",\n            justifyContent: \"center\",\n            width: \"60vw\",\n            height: \"75vh\",\n            fontSize: size.lg ? 20 : 16,\n            margin: \"auto\",\n        },\n        text: {\n            backgroundColor: \"rgba(30,30,30,0.85)\",\n            padding: 20,\n            borderRadius: 5,\n        },\n        imgElement: {\n            maxWidth: \"80vw\",\n        },\n        imgContainer: {\n            backgroundColor: \"rgba(0,0,0,0.9)\",\n            height: \"80vh\",\n        }\n    }\n    const modifiedUrl = props.url + \"?w=1200\"\n    return (\n        <>\n            {props.projectView ?\n                <>\n                    <Flex justifyContent=\"center\" alignItems=\"center\" style={styles.imgContainer}>\n                        <img\n                            src={modifiedUrl}\n                            style={styles.imgElement}\n                            alt=\"Prosjektbilde\"\n                        />\n                    </Flex>\n                </>\n                :\n                <div style={{\n                    backgroundImage: \"linear-gradient( rgba(0, 0, 0, \" + darknessOverlayIntensity + \"), rgba(0, 0, 0, \" + darknessOverlayIntensity + \") ), url('\" + modifiedUrl + \"')\",\n                    ...styles.img,\n                }}>\n                    <div style={styles.label}>\n                        <Flex flexDirection=\"column\">\n                            {props.title && <Heading>{props.title}</Heading>}\n                            {props.label && <Text style={props.projectView ? styles.text : {}}>{props.label}</Text>}\n                        </Flex>\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default function CarouselComponent(props: carouselInterface) {\n    let styles = {\n        container: {},\n        arrowStyles: {\n            position: 'absolute',\n            zIndex: 2,\n            top: 'calc(50% - 40px)',\n            width: 50,\n            height: 50,\n            cursor: 'pointer',\n            color: \"white\",\n            borderRadius: \"100%\",\n            margin: \"0 35px\",\n            backgroundColor: props.projectView ? \"rgba(30,30,30,0.6)\" : \"\",\n        }\n    }\n\n    return (\n        <Carousel showThumbs={false} showIndicators={props.projectView} showStatus={false} autoPlay\n                  infiniteLoop interval={5000} useKeyboardArrows stopOnHover={false}\n                  renderArrowNext={\n                      (onClickHandler, hasNext, label) =>\n                          hasNext && (\n                              <button className=\"carouselArrows\" type=\"button\" onClick={onClickHandler} title={label}\n                                  /* @ts-ignore */\n                                      style={{...styles.arrowStyles, right: 15}}>\n                                  <ArrowRightIcon/>\n                              </button>\n                          )\n                  }\n                  renderArrowPrev={\n                      (onClickHandler, hasNext, label) =>\n                          hasNext && (\n                              <button className=\"carouselArrows\" type=\"button\" onClick={onClickHandler} title={label}\n                                  /* @ts-ignore */\n                                      style={{...styles.arrowStyles, left: 15}}>\n                                  <ArrowLeftIcon/>\n                              </button>\n                          )\n                  }\n        >\n            {\n                props.imgUrls.map(image => <CarouselImage key={image.url} url={image.url} title={image.title ? image.title : \"\"}\n                                                          label={image.label ? image.label : undefined} projectView={props.projectView}/>)\n            }\n        </Carousel>\n    )\n}","import sanityClient from \"@sanity/client\";\n\nexport default sanityClient({\n    projectId: \"vwpf0yhy\", // find this at manage.sanity.io or in your sanity.json\n    dataset: \"production\", // this is from those question during 'sanity init'\n    useCdn: true,\n});","import \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport CarouselComponent from \"./Carousel\";\nimport {Dispatch, SetStateAction, useEffect, useState} from \"react\";\nimport sanityClient from \"../client\";\n\ninterface Props {\n    setHasPageLoaded: Dispatch<SetStateAction<boolean>>\n}\n\nexport default function Header(props: Props) {\n    const [data, setData] = useState([])\n    const [headerImagesLoadedCount, setHeaderImagesLoadedCount] = useState(0)\n    useEffect(() => {\n        if (data.length === 0) props.setHasPageLoaded(false)\n        else if (headerImagesLoadedCount >= data.length) {\n            props.setHasPageLoaded(true)\n        }\n    }, [headerImagesLoadedCount, data.length, props])\n    useEffect(() => {\n        sanityClient.fetch(\"*[_type == 'topp-bilder']{\\n\" +\n            \" toppbildesett[]{'title': title, 'label': subtitle, 'url': asset->url}\" +\n            \"}\").then((d) => {\n            // @ts-ignore\n            setData(d.map(img => img[\"toppbildesett\"])[0])\n            d[0][\"toppbildesett\"].forEach((img: { url: string; }) => {\n                const image = new Image()\n                image.src = img.url\n                image.onload = () => setHeaderImagesLoadedCount(prev => prev + 1)\n            })\n        })\n    }, [])\n    return (\n        <div>\n            <CarouselComponent imgUrls={data} projectView={false} />\n        </div>\n    )\n}","import {Flex, Grid, GridItem, Heading, Text} from \"@chakra-ui/react\";\nimport {useContext} from \"react\";\nimport {sizeContext} from \"../App\";\n\n\nexport default function Services() {\n    const size = useContext(sizeContext)\n    let styles = {\n        container: {\n            zIndex: 2,\n            marginTop: -50,\n            padding: \"80px 0\",\n        },\n        gridItem: {\n            minHeight: 100,\n            marginBottom: 25,\n            height: \"100%\",\n        },\n        text: {\n            maxWidth: size.lg ? \"\" : \"80%\",\n            marginTop: 25,\n        },\n        heading: {\n            marginBottom: 35,\n            color: \"#555\",\n        },\n        icon: {\n            height: 80,\n            transform: \"scale(5.5)\",\n            color: \"rgb(130,200,130)\",\n        }\n    }\n\n    let cols = size.lg ? 6 : 4;\n    let innercols = size.md ? 3 : 1;\n    let rows = size.md ? 1 : 3;\n    return (\n        <>\n            <div className=\"triangleDivTop\" />\n            <div className=\"positionRelative\" style={styles.container}>\n                <Heading align=\"center\" style={styles.heading}>Noen av våre tjenester</Heading>\n                <Grid templateColumns={'repeat(' + cols + ', 1fr)'} templateRows={'repeat(1, 1fr)'}\n                      gap={3}>\n                    {size.lg && <GridItem/>}\n                    <GridItem className=\"positionRelative\" colSpan={4}>\n                        <Grid templateColumns={'repeat(' + innercols + ', 1fr)'}\n                              templateRows={'repeat(' + rows + ', 1fr)'}\n                              gap={10}>\n                            <GridItem style={styles.gridItem}>\n                                <Flex flexDirection=\"column\" align=\"center\">\n                                    <svg\n                                        width=\"20\"\n                                        height=\"20\"\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        viewBox=\"0 0 24 24\"\n                                        fill=\"none\"\n                                        stroke=\"currentColor\"\n                                        strokeWidth=\"1\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        style={styles.icon}\n                                    >\n                                        <line x1=\"18\" y1=\"2\" x2=\"22\" y2=\"6\" />\n                                        <path d=\"M7.5 20.5L19 9l-4-4L3.5 16.5 2 22l5.5-1.5z\" />\n                                    </svg>\n                                    <Text align=\"center\" style={styles.text}>\n                                        Planlegging av hager i både 2D og 3D, slik at våre kunder kan se og tilpasse sin\n                                        drømmehage til egne ønsker og behov\n                                    </Text>\n                                </Flex>\n                            </GridItem>\n                            <GridItem style={styles.gridItem}>\n                                <Flex flexDirection=\"column\" align=\"center\">\n                                    <svg\n                                        width=\"20\"\n                                        height=\"20\"\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        viewBox=\"0 0 24 24\"\n                                        fill=\"currentColor\"\n                                        stroke=\"white\"\n                                        strokeWidth=\"1\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        style={styles.icon}\n                                    >\n                                        <g>\n                                            <path fill=\"none\" d=\"M0 0H24V24H0z\"/>\n                                            <path d=\"M6 3c3.49 0 6.383 2.554 6.913 5.895C14.088 7.724 15.71 7 17.5 7H22v2.5c0 3.59-2.91 6.5-6.5 6.5H13v5h-2v-8H9c-3.866 0-7-3.134-7-7V3h4zm14 6h-2.5c-2.485 0-4.5 2.015-4.5 4.5v.5h2.5c2.485 0 4.5-2.015 4.5-4.5V9zM6 5H4v1c0 2.761 2.239 5 5 5h2v-1c0-2.761-2.239-5-5-5z\"/>\n                                        </g>\n                                    </svg>\n                                    <Text align=\"center\" style={styles.text}>\n                                        Planting av busker, trær, plener og stauder, beskjæring av busker og hekker, og\n                                        vanning av plen og planter\n                                    </Text>\n                                </Flex>\n                            </GridItem>\n                            <GridItem style={styles.gridItem}>\n                                <Flex flexDirection=\"column\" align=\"center\">\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        width=\"20\"\n                                        height=\"20\"\n                                        viewBox=\"0 0 24 24\"\n                                        fill=\"none\"\n                                        stroke=\"currentColor\"\n                                        strokeWidth=\"1\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        style={styles.icon}\n                                    >\n                                        <path d=\"M15 12l-8.5 8.5c-.83.83-2.17.83-3 0 0 0 0 0 0 0a2.12 2.12 0 010-3L12 9\" />\n                                        <path d=\"M17.64 15L22 10.64\" />\n                                        <path d=\"M20.91 11.7l-1.25-1.25c-.6-.6-.93-1.4-.93-2.25v-.86L16.01 4.6a5.56 5.56 0 00-3.94-1.64H9l.92.82A6.18 6.18 0 0112 8.4v1.56l2 2h2.47l2.26 1.91\" />\n                                    </svg>\n                                    <Text align=\"center\" style={styles.text}>\n                                        Bygging av terasser, støttemurer, gjerder og trapper, og renovering av gamle\n                                        hagekonstruksjoner\n                                    </Text>\n                                </Flex>\n                            </GridItem>\n                        </Grid>\n                    </GridItem>\n                    {size.lg && <GridItem/>}\n                </Grid>\n            </div>\n            <div className=\"triangleDivBottom\" />\n        </>\n    )\n}\n","import {Flex, Text, Heading, Box, Grid, GridItem} from \"@chakra-ui/react\"\nimport {useContext, useEffect, useState} from \"react\";\nimport {sizeContext} from \"../App\";\nimport sanityClient from \"../client\";\n\nexport default function About() {\n    const darknessOverlayIntensity = 0.5\n    const minHeight = 400\n    const size = useContext(sizeContext)\n    const [bgImageUrl, setBgImageUrl] = useState(\"\")\n\n    useEffect(() => {\n        sanityClient.fetch(\"*[_type == 'om-bilde']{bilde{'url': asset->url}}\").then((d) => {\n            setBgImageUrl(d[0][\"bilde\"][\"url\"] + \"?w=1200\")\n        })\n    }, [])\n    let styles = {\n        container: {\n            backgroundAttachment: \"fixed\",\n            backgroundPosition: \"center\",\n            backgroundSize: \"cover\",\n            minHeight: minHeight,\n            zIndex: 3,\n            color: \"white\",\n            padding: \"140px 0\",\n            backgroundImage: \"linear-gradient( rgba(0, 0, 0, \" + darknessOverlayIntensity + \"), rgba(0, 0, 0, \" + darknessOverlayIntensity + \") ), url('\" + bgImageUrl + \"')\",\n        },\n        flexContainer: {\n            minHeight: minHeight,\n            padding: 15,\n        },\n    }\n    return (\n        <>\n            <div style={styles.container}>\n                <Grid templateColumns={'repeat(6, 1fr)'} gap={3}>\n                    {size.lg && <GridItem />}\n                    <GridItem colSpan={size.lg ? 4 : 6} >\n                        <Flex style={styles.flexContainer} justify=\"center\" align=\"center\">\n                            <Box>\n                                <Heading align=\"center\">Om bedriften</Heading>\n                                <Text align=\"center\">\n                                    Hageprosjekt er en bedrift fra Gjøvik som utfører både hageplanlegging og\n                                    hagearbeid. Vår prosjektleder har 5 års universitetsutdanning og mastergrad i prydplanter. Vi\n                                    utarbeider forskjellige grøntprosjekter både for private kunder og bedrifter. Vi kan gi gode\n                                    råd, er faglig dyktige, og vi vet at våre kunder ønsker et kvalitetsprodukt. Vi har vært en del\n                                    av bransjen siden 2007, og har derfor svært mye praktisk erfaring, noe som er nødvendig for å\n                                    oppnå et godt sluttprodukt.\n                                </Text>\n                            </Box>\n                        </Flex>\n                    </GridItem>\n                    {size.lg && <GridItem />}\n                </Grid>\n            </div>\n        </>\n    )\n}\n","import {Grid, GridItem, Heading, Modal, ModalContent, ModalOverlay, Text, useDisclosure} from \"@chakra-ui/react\";\nimport {useContext, useEffect, useState} from \"react\";\nimport {sizeContext} from \"../App\";\nimport CarouselComponent from \"./Carousel\";\nimport sanityClient from \"../client\";\n\nexport default function Projects() {\n    const size = useContext(sizeContext)\n    // lg = 3, md = 2, sm = 1\n    let cols = size.lg ? 3 : (size.md ? 2 : 1);\n    const [projects, setProjects] = useState([])\n    useEffect(() => {\n        sanityClient.fetch(\"*[_type == 'prosjekt']{'title': '', 'images': prosjektsett[]{'url': asset->url}}\").then((d) => {\n            d.forEach((project: { url: string; }) => project.url = project.url + \"?w=800\")\n            // @ts-ignore\n            setProjects(d)\n        })\n    }, [])\n    let rows = Math.ceil(projects.length / cols)\n    let rowHeight = 200\n    let styles = {\n        heading: {\n            marginBottom: 35,\n            color: \"#555\",\n        },\n        parentGrid: {\n            marginBottom: 50,\n            padding: \"0 10px\",\n        }\n    }\n    if (projects.length === 0) return (<></>)\n    return (\n        <>\n            <div className=\"triangleDivTop\"/>\n            <Heading style={styles.heading} align=\"center\">\n                Utvalgte prosjekter\n            </Heading>\n            <Grid style={styles.parentGrid} templateColumns={'repeat(' + (size.lg ? 6 : 4) + ', 1fr)'} gap={3}>\n                {size.lg && <GridItem/>}\n                <GridItem colSpan={4}>\n                    <Grid templateColumns={'repeat(' + cols + ', 1fr)'}\n                          templateRows={'repeat(' + rows + ', ' + rowHeight + 'px)'} gap={2}>\n                        {projects.map(project => <Project key={project[\"images\"][0][\"url\"]} title={project[\"title\"] ? project[\"title\"] : undefined} images={project[\"images\"]}/>)}\n                    </Grid>\n                </GridItem>\n                {size.lg && <GridItem/>}\n            </Grid>\n        </>\n    )\n}\n\ninterface projectInterface {\n    title?: string;\n    images: { url: string, label?: string }[]\n}\n\nfunction Project(props: projectInterface) {\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    let styles = {\n        container: {\n            cursor: \"pointer\",\n            backgroundImage: \"url(\" + props.images[0].url + \")\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n        },\n        overlay: {\n            bottom: 0,\n            width: \"100%\",\n            backgroundColor: \"rgba(255,255,255,0.85)\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n        }\n    }\n    return (\n        <>\n            <Modal isOpen={isOpen} onClose={onClose} motionPreset='slideInBottom' size={\"xl\"}>\n                <ModalOverlay />\n                <ModalContent maxW=\"80vw\">\n                    <CarouselComponent imgUrls={props.images} projectView={true} />\n                </ModalContent>\n            </Modal>\n            <GridItem className=\"positionRelative projectOverlay\" style={styles.container} background=\"gray.200\"\n                      onClick={onOpen}>\n                {/* @ts-ignore */}\n                <div className=\"positionAbsolute\" style={styles.overlay}>\n                    {props.title && <Heading>{props.title}</Heading>}\n                    <Text>(Trykk for å se {props.images.length} bilde{props.images.length > 1 ? \"r\" : \"\"})</Text>\n                </div>\n            </GridItem>\n        </>\n    )\n}\n","import React, {useContext, useState} from \"react\";\nimport {Button, Grid, GridItem, Heading, Input, InputGroup, InputLeftElement, InputRightElement, Stack, Text, Textarea, Tooltip} from \"@chakra-ui/react\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {sizeContext} from \"../App\";\nimport {faMobileAlt, faEnvelope, faMapMarkerAlt, faAngleRight, IconDefinition} from '@fortawesome/free-solid-svg-icons'\nimport { CheckIcon, EmailIcon, WarningTwoIcon } from \"@chakra-ui/icons\";\n\n\nfunction InputElement(props: {inputText: string, icon: IconDefinition, validFunc: (text: string) => boolean, tooltip: string, name: string}) {\n    let [input, setInput] = useState(\"\")\n    let [valid, setValid] = useState(false)\n    return (\n        <>\n            <InputGroup>\n                <InputLeftElement\n                    pointerEvents='none'\n                    color='gray.500'\n                    fontSize='1.2em'\n                    children={<FontAwesomeIcon icon={props.icon}/>}\n                />\n                <Input name={props.name} placeholder={props.inputText} text={input} onChange={(e) => {\n                    setInput(e.target.value)\n                    setValid(props.validFunc(e.target.value))\n                }} />\n                <InputRightElement\n                    children={\n                        valid ?\n                            <CheckIcon color='green.500' /> :\n                            <Tooltip label={props.tooltip}>\n                                <WarningTwoIcon color='yellow.500' />\n                            </Tooltip>\n                    }\n                />\n            </InputGroup>\n        </>\n    )\n}\n\nexport default function Contact() {\n    let styles = {\n        container: {\n        },\n        heading: {\n            marginBottom: 15,\n            color: \"#555\",\n        },\n        icon: {\n            marginRight: 10,\n            transform: \"scale(1.3)\",\n        },\n        text: {\n            marginBottom: 10,\n        },\n        bottom: {\n            height: 50,\n        },\n        link: {\n            color: \"rgb(0,150,0)\",\n        },\n        map: {\n            display: \"flex\",\n            justifyContent: \"center\",\n        },\n        stack: {\n            padding: \"0 10px\",\n        }\n    }\n    const size = useContext(sizeContext)\n    let cols = size.lg ? 6 : 2;\n    let email = \"info@hageprosjekt.no\"\n    let phone = \"(+47) 412 51 822\"\n    let address = \"Bjørnsvelia 25, 2819 Gjøvik, Norge\"\n    const [validEmail, setValidEmail] = useState(false)\n    const [validPhone, setValidPhone] = useState(false)\n    const [validSubject, setValidSubject] = useState(false)\n\n    let validatePhone = (text: string) => {\n        let isValid = text.length >= 8\n        setValidPhone(isValid)\n        return isValid\n    }\n    let validateSubject = (text: string) => {\n        let isValid = text.length >= 5\n        setValidSubject(isValid)\n        return isValid\n    }\n    let validateEmail = (email: string) => {\n        let re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        let isValid = re.test(email)\n        setValidEmail(isValid)\n        return isValid\n    }\n\n    return (\n        <>\n            <Heading style={styles.heading} align=\"center\">\n                Kontakt oss\n            </Heading>\n            <Grid templateColumns={'repeat(' + cols + ', 1fr)'} gap={3}>\n                {size.lg && <GridItem />}\n                <GridItem colSpan={2} style={styles.container}>\n                    <Text align=\"center\" style={styles.text}>\n                        <FontAwesomeIcon style={styles.icon} icon={faMobileAlt}/>\n                        Mobil: <a style={styles.link} href=\"tel:004741251822\">{phone}</a>\n                    </Text>\n                    <Text align=\"center\" style={styles.text}>\n                        <FontAwesomeIcon style={styles.icon} icon={faEnvelope}/>\n                        E-post: <a style={styles.link} href={\"mailto:\" + email}>{email}</a>\n                    </Text>\n                    <Text align=\"center\" style={styles.text}>\n                        <FontAwesomeIcon style={styles.icon} icon={faMapMarkerAlt}/>\n                        {address}\n                    </Text>\n                    <div style={styles.map}>\n                        <iframe\n                            title=\"Google maps\"\n                            src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1945.6229167923086!2d10.667349516237635!3d60.813957598146494!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x4641d9f933b62cb7%3A0x9e51d7079356b003!2sBj%C3%B8rnsvelia%2025%2C%202819%20Gj%C3%B8vik!5e0!3m2!1sno!2sno!4v1640353605265!5m2!1sno!2sno\"\n                            /* @ts-ignore */\n                            width=\"400\" height=\"300\" allowFullScreen=\"\" />\n                    </div>\n                </GridItem>\n                <GridItem colSpan={2} style={styles.container}>\n                    <form\n                        action=\"https://formspree.io/f/xayvnbga\"\n                        method=\"POST\"\n                    >\n                        <Stack style={styles.stack} spacing={4}>\n                            <InputElement\n                                name=\"Telefonnummer\"\n                                icon={faMobileAlt}\n                                inputText={\"Telefonnummer\"}\n                                validFunc={validatePhone}\n                                tooltip={\"Ugyldig telefonnummer\"}\n                            />\n                            <InputElement\n                                name=\"_replyto\"\n                                icon={faEnvelope}\n                                inputText={\"E-post\"}\n                                validFunc={validateEmail}\n                                tooltip={\"Ugyldig e-post-adresse\"}\n                            />\n                            <InputElement\n                                name=\"subject\"\n                                icon={faAngleRight}\n                                inputText={\"Emne\"}\n                                validFunc={validateSubject}\n                                tooltip={\"Emnet er for kort\"}\n                            />\n                            <Textarea\n                                name=\"Innhold\"\n                                placeholder='Innhold'\n                                resize=\"vertical\"\n                                height={\"215px\"}\n                            />\n                            <Button\n                                type=\"submit\"\n                                disabled={!validEmail || !validPhone || !validSubject}\n                                leftIcon={<EmailIcon />}\n                                width=\"200px\"\n                                borderColor={\"#82C882\"}\n                                border={\"1px\"}\n                                variant='outline'\n                            >\n                                Send henvendelse\n                            </Button>\n                        </Stack>\n                    </form>\n                </GridItem>\n            </Grid>\n            <div style={styles.bottom}/>\n        </>\n    )\n}\n","\nexport default function Snowflakes() {\n    let currentDate = new Date();\n    let christmas = currentDate.getMonth() === 11 || currentDate.getMonth() === 0; // Christmas styling in Dec, Jan\n    return (\n        <>\n            {christmas &&\n            <>\n              <div className=\"snowflake\">❅</div>\n              <div className=\"snowflake\">❆</div>\n              <div className=\"snowflake\">❅</div>\n              <div className=\"snowflake\">❆</div>\n              <div className=\"snowflake\">❅</div>\n              <div className=\"snowflake\">❆</div>\n              <div className=\"snowflake\">❅</div>\n              <div className=\"snowflake\">❆</div>\n              <div className=\"snowflake\">❅</div>\n              <div className=\"snowflake\">❆</div>\n              <div className=\"snowflake\">❅</div>\n              <div className=\"snowflake\">❆</div>\n            </>\n            }\n        </>\n    )\n}","import {useEffect} from \"react\";\n\ninterface Props {\n    disappear: boolean\n}\n\nexport default function LoadingScreen(props: Props) {\n    useEffect(() => {\n        if (props.disappear) {\n            document.getElementById(\"loaderOverlay\")!.className += \" opacity0\"\n        }\n    }, [props.disappear])\n    let styles = {\n        container: {\n            backgroundColor: \"white\",\n            width: \"100vw\",\n            height: \"100vh\",\n            zIndex: 250,\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginBottom: 50,\n        },\n        innerContainer: {\n            width: \"180px\",\n        },\n        outerContainer: {\n            display: \"flex\",\n            flexDirection: \"column\",\n        },\n        text: {\n            color: \"white\",\n        },\n    }\n    return (\n        <div style={styles.container} id=\"loaderOverlay\" className={\"positionFixed\"}>\n            <svg style={styles.innerContainer} className=\"animated-icon pencil\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 525 525\">\n                <path\n                    d=\"M333.16,51v51.13a9.43,9.43,0,0,1-9.43,9.43H200.62a9.42,9.42,0,0,1-9.42-9.43V51a37.73,37.73,0,0,1,37.65-37.65H295.5A37.59,37.59,0,0,1,333.16,51Zm-142,95V437.27l55.62,79.13a18.84,18.84,0,0,0,30.83,0l55.56-79.18V146a9.41,9.41,0,0,0-9.43-9.42H200.68A9.51,9.51,0,0,0,191.2,146ZM235.56,368a10.93,10.93,0,0,1-11-11V186.19a11,11,0,0,1,22,0V357a10.93,10.93,0,0,1-11,11Zm26.62,66.65L288.79,408l20.13,20.13-29.5,42H244.93l-29.5-42L235.56,408Z\"/>\n            </svg>\n            <svg style={styles.innerContainer} className=\"animated-icon seedling\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 525 525\">\n                <path\n                    d=\"M70.2,140.41H6.2c0,123.7,100.3,224,224,224v144a16,16,0,0,0,16,16h32a16,16,0,0,0,16-16v-144C294.2,240.71,193.9,140.41,70.2,140.41Zm384-64c-84.2,0-157.4,46.5-195.7,115.2a256.38,256.38,0,0,1,59,107.6c112.7-11.7,200.7-106.9,200.7-222.8Z\"/>\n            </svg>\n            <svg style={styles.innerContainer} className=\"animated-icon hammer\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 525 525\">\n                <path\n                    d=\"M406.8,28.78H380.5a13.14,13.14,0,0,0-13.14,13.15V55.07H333.78a52.37,52.37,0,0,0-45.29-26.3H235.91A131.46,131.46,0,0,0,104.46,160.23l78.87-26.29,10.89,10.89a52.52,52.52,0,0,0,37.18,15.39h57.1a52.37,52.37,0,0,0,45.29-26.29h33.57v13.14a13.15,13.15,0,0,0,13.15,13.15H406.8A13.15,13.15,0,0,0,420,147.07V41.91A13.15,13.15,0,0,0,406.8,28.78ZM231.4,186.52a80.56,80.56,0,0,1-12.66-1.22L208.9,471.86a50.8,50.8,0,1,0,101.55,0l-9.84-286.52a79.87,79.87,0,0,1-12.11,1.18Z\"/>\n            </svg>\n        </div>\n    )\n}","import './App.css';\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport Services from \"./components/Services\";\nimport About from \"./components/About\";\nimport Projects from \"./components/Projects\";\nimport Contact from \"./components/Contact\";\nimport {useMediaQuery} from '@chakra-ui/react';\nimport {createContext, useRef, useState} from \"react\";\nimport Snowflakes from \"./components/Snowflakes\";\nimport {HashRouter as Router, Switch, Route, RouteProps} from \"react-router-dom\";\nimport LoadingScreen from \"./components/LoadingScreen\";\n\n\nconst sizeContext = createContext({xl: false, lg: false, md: false, sm: false})\n\n\ninterface AuthRouteProps extends RouteProps {\n    redirect?: string\n}\n\nfunction UnAuthenticatedRoute({ children, redirect = \"/\", ...rest }: AuthRouteProps) {\n    return (\n        <Route {...rest}>\n            {children}\n        </Route>\n    )\n}\n\nfunction App() {\n    const [xl, lg, md, sm] = useMediaQuery([\n        '(min-width: 1920px)',\n        '(min-width: 1250px)',\n        '(min-width: 768px)',\n        '(min-width: 480px)',\n    ])\n    // Section refs\n    const headerRef = useRef(null)\n    const servicesRef = useRef(null)\n    const aboutRef = useRef(null)\n    const projectsRef = useRef(null)\n    const contactRef = useRef(null)\n    const [hasPageLoaded, setHasPageLoaded] = useState(false)\n\n    return (\n        <div className=\"App\">\n            <sizeContext.Provider value={{xl: xl, lg: lg, md: md, sm: sm}}>\n                <Router basename={process.env.PUBLIC_URL}>\n                    <Switch>\n                    <UnAuthenticatedRoute path={\"/\"}>\n                        <LoadingScreen disappear={hasPageLoaded} />\n                        <Snowflakes />\n                        <Navbar headerRef={headerRef} servicesRef={servicesRef} contactRef={contactRef} aboutRef={aboutRef} projectsRef={projectsRef} />\n                        <div ref={headerRef}>\n                            <Header setHasPageLoaded={setHasPageLoaded}/>\n                        </div>\n                        <div ref={servicesRef}>\n                            <Services/>\n                        </div>\n                        <div ref={aboutRef}>\n                            <About/>\n                        </div>\n                        <div ref={projectsRef}>\n                            <Projects/>\n                        </div>\n                        <div ref={contactRef}>\n                            <Contact/>\n                        </div>\n                    </UnAuthenticatedRoute>\n                    </Switch>\n                </Router>\n            </sizeContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\nexport {sizeContext};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {ChakraProvider} from '@chakra-ui/react'\nimport reportWebVitals from './reportWebVitals';\n\nwindow.React = React;\nReactDOM.render(\n  <React.StrictMode>\n      <ChakraProvider>\n          <App />\n      </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}